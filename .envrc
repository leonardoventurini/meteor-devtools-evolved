#!/usr/bin/env bash
export DEVTOOLS_HOME="$(git rev-parse --show-toplevel)"

red=`tput setaf 1`
green=`tput setaf 2`

get-browser-name() {
  case $1 in
    -c)
      browser="chrome"
      ;;
    -f)
      browser="firefox"
      ;;
    *)
      browser="chrome"
      ;;
  esac
}

function mpm() {
  meteor npm $@
}

function start() {(
  yarn devapp
)}

function develop() {
    get-browser-name $1
    echo "${green}::=> Starting Development mode for => ${browser}"
    yarn concurrently -n ext,app "webpack --config webpack/${browser}.dev.js" "yarn devapp"
}

function watch() {
  get-browser-name $1
  yarn webpack --config webpack/${browser}.dev.js
}

function setup() {
  echo "${green}Installing extension dependencies..."
  yarn

  echo "${green}Installing development app dependencies..."
  cd devapp || exit
  yarn
}

function update-meteor() {(
  cd devapp || exit
  meteor update
  cd ..
)}

function package-version() {
  grep version <package.json |
    head -1 |
    awk -F: '{ print $2 }' |
    sed 's/[", ]//g'
}

function pack-extension() {
  get-browser-name $1

  if [$browser != 'chrome']; then
    echo "${red}Only chrome version can be packed with chromium. Firefox version can be uploaded directly on https://addons.mozilla.org/en-US/firefox/"
    exit 1
  fi

  VERSION=$(package-version)
  NAME="releases/${VERSION}.crx"

  mkdir -p releases
  google-chrome --pack-extension=chrome --pack-extension-key=chrome.pem --disable-gpu
  mv chrome.crx "$NAME"
  git add "$NAME"
}

function build() {
  get-browser-name $1

  local VERSION=$(package-version)

  [ ! -d 'releases'] && mkdir releases

  yarn run build:${browser}

  cd extension/${browser} || exit

  zip -r "../../releases/meteor-devtools-evolved-${VERSION}.${browser}.zip" -- *

  cd - || exit
}
